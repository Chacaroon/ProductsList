// <auto-generated />
using DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DAL.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DAL.Entities.Category", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "Category 1"
                        },
                        new
                        {
                            Id = 2L,
                            Name = "Category 2"
                        },
                        new
                        {
                            Id = 3L,
                            Name = "Category 3"
                        });
                });

            modelBuilder.Entity("DAL.Entities.Product", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CategoryId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CategoryId = 2L,
                            Name = "Product 1"
                        },
                        new
                        {
                            Id = 2L,
                            CategoryId = 3L,
                            Name = "Product 2"
                        },
                        new
                        {
                            Id = 3L,
                            CategoryId = 1L,
                            Name = "Product 3"
                        },
                        new
                        {
                            Id = 4L,
                            CategoryId = 2L,
                            Name = "Product 4"
                        },
                        new
                        {
                            Id = 5L,
                            CategoryId = 3L,
                            Name = "Product 5"
                        },
                        new
                        {
                            Id = 6L,
                            CategoryId = 1L,
                            Name = "Product 6"
                        },
                        new
                        {
                            Id = 7L,
                            CategoryId = 2L,
                            Name = "Product 7"
                        },
                        new
                        {
                            Id = 8L,
                            CategoryId = 3L,
                            Name = "Product 8"
                        },
                        new
                        {
                            Id = 9L,
                            CategoryId = 1L,
                            Name = "Product 9"
                        },
                        new
                        {
                            Id = 10L,
                            CategoryId = 2L,
                            Name = "Product 10"
                        });
                });

            modelBuilder.Entity("DAL.Entities.Product", b =>
                {
                    b.HasOne("DAL.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
